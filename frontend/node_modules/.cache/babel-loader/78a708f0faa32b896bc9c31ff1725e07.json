{"ast":null,"code":"var _jsxFileName = \"/Users/allen/TigerPhotos/src/components/ReviewForm.js\";\nimport React, { useState } from 'react';\nimport { Form, Input, Rating, Button } from 'semantic-ui-react';\nexport const ReviewForm = ({\n  onNewReview\n}) => {\n  const [netid, setNetid] = useState('');\n  const [photographer_netid, setPhotographer] = useState('');\n  const [description, setDescription] = useState('');\n  const [rating, setRating] = useState(1);\n  return /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"netid\",\n    value: netid,\n    onChange: e => setNetid(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"photographer netid\",\n    value: photographer_netid,\n    onChange: e => setPhotographer(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"description\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Rating, {\n    icon: \"star\",\n    rating: rating,\n    maxRating: 5,\n    onRate: (_, data) => {\n      setRating(data.rating);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: async () => {\n      const review = {\n        netid,\n        photographer_netid,\n        description,\n        rating\n      };\n      const response = await fetch('/api/add_review', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(review)\n      });\n\n      if (response.ok) {\n        console.log('response worked');\n        onNewReview(review);\n        setNetid('');\n        setPhotographer('');\n        setDescription('');\n        setRating(1);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"submit\")));\n};","map":{"version":3,"sources":["/Users/allen/TigerPhotos/src/components/ReviewForm.js"],"names":["React","useState","Form","Input","Rating","Button","ReviewForm","onNewReview","netid","setNetid","photographer_netid","setPhotographer","description","setDescription","rating","setRating","e","target","value","_","data","review","response","fetch","method","headers","body","JSON","stringify","ok","console","log"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Form, Input, Rating, Button } from 'semantic-ui-react';\n\nexport const ReviewForm = ({onNewReview}) => {\n    const[netid, setNetid] = useState('');\n    const[photographer_netid, setPhotographer] = useState('');\n    const[description, setDescription] = useState('');\n    const[rating, setRating] = useState(1);\n\n    return (\n        <Form>\n            <Form.Field>\n                <Input \n                    placeholder=\"netid\" \n                    value={netid} \n                    onChange={e => setNetid(e.target.value)}\n                />\n            </Form.Field>\n            <Form.Field>\n                <Input \n                    placeholder=\"photographer netid\" \n                    value={photographer_netid} \n                    onChange={e => setPhotographer(e.target.value)}\n                />\n            </Form.Field>\n            <Form.Field>\n                <Input \n                    placeholder=\"description\" \n                    value={description} \n                    onChange={e => setDescription(e.target.value)}\n                />\n            </Form.Field>\n            <Form.Field>\n                <Rating \n                    icon=\"star\"\n                    rating={rating}\n                    maxRating={5}\n                    onRate={(_, data) => {\n                        setRating(data.rating);\n                    }}\n                />\n            </Form.Field>\n            <Form.Field>\n                <Button \n                    onClick={ async () => {\n                        const review = { netid, photographer_netid, description, rating };\n                        const response = await fetch('/api/add_review', {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json'\n                            }, \n                            body: JSON.stringify(review)\n                        });\n                    \n                        if (response.ok) {\n                            console.log('response worked');\n                            onNewReview(review);\n                            setNetid('');\n                            setPhotographer('');\n                            setDescription('');\n                            setRating(1);\n                        }\n                    }}\n                >\n                    submit\n                </Button>\n            </Form.Field>\n        </Form>\n        );\n    };\n"]},"metadata":{},"sourceType":"module"}